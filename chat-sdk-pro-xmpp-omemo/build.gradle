plugins {
    id 'com.android.library'
    id 'com.jfrog.artifactory' version "$jfrogVersion"
    id 'maven-publish'
    id 'com.jakewharton.butterknife'
    id 'kotlin-android'
    // id 'kotlin-android-extensions'
}

android {

    compileSdkVersion Integer.parseInt(project.ANDROID_COMPILE_SDK_VERSION)

    defaultConfig {
        minSdkVersion Integer.parseInt(project.MIN_SDK)

    }

    buildTypes {
        debug {
            minifyEnabled project.hasProperty('minifyDebug') && minifyDebug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../chat-sdk-proguard-rules.pro', 'proguard-rules.pro'
        }
        release {
            minifyEnabled project.hasProperty('minifyRelease') && minifyRelease
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../chat-sdk-proguard-rules.pro', 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    lint {
        abortOnError false
        checkReleaseBuilds false
        lintConfig file('lint.xml')
    }

}

dependencies {

    implementation project(':chat-sdk-pro-xmpp-adapter')
    implementation project(':chat-sdk-core-ui')

    api "org.igniterealtime.smack:smack-omemo:$smackVersion"
//    implementation "org.igniterealtime.smack:smack-omemo-signal:$smackVersion"

    implementation("org.igniterealtime.smack:smack-omemo-signal:$smackVersion") {
        exclude group: "com.google.protobuf", module: "protobuf-java"
    }
}

ext {
    libraryName = 'XMPPOMEMO'
    artifact = 'pro-xmpp-omemo'
    libraryDescription = 'XMPP OMEMO'
}
