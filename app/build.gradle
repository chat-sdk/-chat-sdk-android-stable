apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'com.google.firebase.crashlytics'

//apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdkVersion Integer.parseInt(project.ANDROID_COMPILE_SDK_VERSION)

    defaultConfig {
        applicationId "sdk.chat.android.live"

        multiDexEnabled = true
        minSdkVersion Integer.parseInt(project.DEMO_MIN_SDK)

        versionName CHAT_SDK_VERSION
        versionCode CHAT_SDK_BUILD_NUMBER as int
    }

    signingConfigs {
        debug {
            keyAlias 'androiddebugkey'
            keyPassword 'D3bug123'
            storeFile file('debug.keystore')
            storePassword 'D3bug123'
        }
        release {
            keyAlias 'androiddebugkey'
            keyPassword 'D3bug123'
            storeFile file('debug.keystore')
            storePassword 'D3bug123'
        }
    }

    if(project.hasProperty('devBuild')) {
        splits.abi.enable = false
        splits.density.enable = false
        aaptOptions.cruncherEnabled = false
    }

    buildTypes {
        release {
            minifyEnabled project.hasProperty('minifyRelease') && minifyRelease
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../chat-sdk-proguard-rules.pro', 'proguard-rules.pro'
        }
        debug {
            minifyEnabled project.hasProperty('minifyDebug') && minifyDebug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../chat-sdk-proguard-rules.pro', 'proguard-rules.pro'
            debuggable true
            jniDebuggable true
            ext.alwaysUpdateBuildId = false
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/ASL2.0', 'META-INF/*.kotlin_module']
        }
    }


    dexOptions {
        javaMaxHeapSize "6g"
        preDexLibraries = false
    }

//    flavorDimensions "default"
//    productFlavors {
//        development {
//            dimension "default"
//            minSdkVersion 21
//            resConfigs("en", "xxhdpi")
//        }
//    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lint {
        abortOnError false
        checkReleaseBuilds false
        lintConfig file('lint.xml')
    }

}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar','*.aar'])

//    implementation project(':chat-sdk-demo')

    implementation project(':chat-sdk-pro-calling')

    implementation project(':chat-sdk-core-ui')
    implementation project(':chat-sdk-firebase-adapter')
    implementation project(':chat-sdk-firebase-push')
    implementation project(':chat-sdk-firebase-upload')

    api project(':chat-sdk-mod-image-editor')

    implementation project(':chat-sdk-pro-contact-book')

    implementation project(':chat-sdk-pro-calling')

//    implementation project(':chat-sdk-firestream-adapter')
//
    implementation project(':chat-sdk-mod-ui-extras')
//    implementation project(':chat-sdk-mod-firebase-ui')
//    implementation project(':chat-sdk-mod-profile-pictures')
//
    implementation project(':chat-sdk-pro-message-audio')
    implementation project(':chat-sdk-pro-message-sticker')
    implementation project(':chat-sdk-pro-message-file')
    implementation project(':chat-sdk-pro-message-video')
//
    implementation project(':chat-sdk-pro-encryption')
    implementation project(':chat-sdk-pro-contact-book')
//
    implementation project(':chat-sdk-pro-firebase-nearby-users')
    implementation project(':chat-sdk-pro-firebase-blocking')
    implementation project(':chat-sdk-pro-firebase-last-online')
    implementation project(':chat-sdk-pro-firebase-typing-indicator')
    implementation project(':chat-sdk-pro-firebase-read-receipts')
//
//    implementation project(':chat-sdk-pro-firestream-typing-indicator')
//    implementation project(':chat-sdk-pro-firestream-read-receipts')


    implementation project(path: ':chat-sdk-pro-xmpp-adapter')
    implementation project(path: ':chat-sdk-pro-xmpp-read-receipts')

//    api project(path: ':chat-sdk-xmpp-ejabberd-file-storage')
//    api project(':chat-sdk-image-canvas')

    implementation "org.greenrobot:greendao:$greenDaoVersion"

//    // Recommended: Add the Firebase SDK for Google Analytics.
//    implementation "com.google.firebase:firebase-analytics:$firebaseAnalyticsVersion"
//
//    // Add the Firebase Crashlytics SDK.
//    implementation "com.google.firebase:firebase-crashlytics:$firebaseCrashlyticsVersion"
//    implementation "com.google.firebase:firebase-perf:$firebasePerformanceVersion"

//    implementation "com.google.firebase:firebase-perf:$firebasePerformanceVersion"

    implementation "com.jakewharton:butterknife:$butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnifeVersion"

}


//task copyDependencies(type: Copy) {
//    from configurations.compile
//    into 'dependencies'
//}
