plugins {
    id 'com.android.library'
    id 'com.jfrog.artifactory' version "$jfrogVersion"

    id 'maven-publish'
    id 'com.jakewharton.butterknife'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
}

android {

    compileSdkVersion Integer.parseInt(project.ANDROID_COMPILE_SDK_VERSION)

    defaultConfig {
        minSdkVersion Integer.parseInt(project.MIN_SDK)

    }

    buildTypes {
        debug {
            minifyEnabled project.hasProperty('minifyDebug') && minifyDebug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../chat-sdk-proguard-rules.pro', 'proguard-rules.pro'
        }
        release {
            minifyEnabled project.hasProperty('minifyRelease') && minifyRelease
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../chat-sdk-proguard-rules.pro', 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    lint {
        abortOnError false
        checkReleaseBuilds false
        lintConfig file('lint.xml')
    }

}

rootProject.allprojects {
    repositories {
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven { url "https://chatsdk.jfrog.io/artifactory/release/chatkit" }
        maven { url "https://chatsdk.jfrog.io/artifactory/release/matisse" }
        maven { url "https://chatsdk.jfrog.io/artifactory/release/material-search-view" }
        maven { url "https://chatsdk.jfrog.io/artifactory/release/android-image-cropper" }
        maven { url "https://chatsdk.jfrog.io/artifactory/release/android-audio-recorder" }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api project(':chat-sdk-core')

    api "androidx.recyclerview:recyclerview:$androidxRecyclerViewVersion"
    implementation "org.ocpsoft.prettytime:prettytime:$prettyTimeVersion"

    implementation "sdk.chat:android-image-cropper:$imageCropperVersion"

    implementation "com.github.chrisbanes:PhotoView:$photoViewVersion"
    implementation "id.zelory:compressor:$compressorVersion"

    implementation "com.jakewharton.rxrelay2:rxrelay:$rxRelayVersion"

    // Dependencies required by other Chat SDK libraries
    api "androidx.constraintlayout:constraintlayout:$androidxConstraintLayoutVersion"
    api "com.google.android.material:material:$materialVersion"

    api "com.github.siyamed:android-shape-imageview:$shapeImageViewVersion"
    api "sdk.chat:chat-kit:$chatKitVersion"

    api "com.mikepenz:google-material-typeface:$iconicsGoogleMaterialIconsVersion"
    api "com.mikepenz:fontawesome-typeface:$iconicsFontAwesomeTypefaceVersion"

    api "com.mikepenz:iconics-core:$iconicsVersion"
    api "com.mikepenz:iconics-views:$iconicsVersion"

    api "de.hdodenhof:circleimageview:$circleImageViewVersion"

    implementation "sdk.chat:matisse:$matisseVersion"

    implementation "com.jakewharton:butterknife:$butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnifeVersion"

    implementation "com.jaredrummler:material-spinner:$materialSpinnerVersion"
    implementation "net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:$keyboardVisibilityEventVersion"
    implementation "sdk.chat:android-audio-recorder:$androidAudioRecorderVersion"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"

}


ext {
    libraryName = 'CoreUI'
    artifact = 'ui'
    libraryDescription = 'Core UI'
}

if (project.hasProperty("mavenPublish") && mavenPublish) {
    apply from: '../bintray.gradle'
}



